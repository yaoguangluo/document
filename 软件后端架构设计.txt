软件后端设计需要考虑认知复杂度。
1通常数据对象进入接口函数， 需要有一个将输入对象转化为内部对象的接口， 我们定义为接口层。（interface, controller, gate）
2内部对象用于完成某一个rest的特定功能， 我们将这个功能定义为工厂层。(factory, delegate, beans)
3工厂可以定制许多服务，完成特定任务，我们定义位服务层。(service, business)
4 服务层需要访问外部数据库， 外部接口，外部缓存， 外部url， 得到数据， 或者计算和外部接口调用， 我们定义为消费层，(consumer, DAO, goods)
5 上面4层涉及的认知复杂度 和函数离散 和耦合 以及公共类，我们定义为工具层。(aop, utils,tools)

一个后端系统好不好， 质量高不高， 就看这5层合不合理。

罗瑶光
